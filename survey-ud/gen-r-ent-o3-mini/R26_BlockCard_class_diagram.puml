@startuml
' Define classes

class User {
  - reason: String
  - explanation: String
  + selectReason(reason: String)
  + enterExplanation(text: String)
  + requestCardBlock(card: Card)
}

class System {
  + validateExplanation(reason: String, explanation: String): Boolean
  + blockCard(card: Card): void
  + notifyUsage(card: Card): void
}

class Card {
  - isBlocked: Boolean
  - reason: String
  - explanation: String
  + block(): void
  + use(): void
}

class Banking {
  + informStaff(message: String): void
}

class Cardholder {
  + notify(message: String): void
}

' Relationships

User "1" --> "1" System : initiates block request
System "1" --> "1" Card : blocks >>
System "1" --> "1" Banking : informs if card used
System "1" --> "1" Cardholder : notifies if card used

' Additional relation: User is associated with Cardholder
User -- Cardholder : represents (same person)

' Optional: Card has a reason attribute that comes from User input.
Card --> "1" User : blocked by request

@enduml