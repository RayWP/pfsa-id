@startuml

'------------------------
' Clinic System Classes
'------------------------

class Clinic {
  +registerPatient(newPatient: Patient) : void
  +schedulePatient(patient: Patient, date: Date) : void
  +billPatient(patient: Patient, amount: double) : void
}

class Office {
  +scheduleAppointment(patient: Patient, date: Date) : void
  +callPatient(patient: Patient) : void
  +processBilling(patient: Patient, payment: double) : void
}

class Patient {
  -name: String
  -address: String
  -telephoneNumbers: String
  -allergies: String
  -stateOfMind: String
  +fillOutForm(form: Form) : void
}

class Form {
  -name: String
  -address: String
  -telephoneNumbers: String
  -allergies: String
  -stateOfMind: String
  +validate() : Boolean
  +submit() : void
}

class AppointmentBook {
  -appointments: List<Appointment>
  +addAppointment(appointment: Appointment) : void
  +removeAppointment(appointment: Appointment) : void
  +updateAppointment(appointment: Appointment) : void
}

class Appointment {
  -date: Date
  -details: String
  +reschedule(newDate: Date) : void
}

class PatientRecords {
  -contactInformation: String
  +updateRecord(patient: Patient) : void
  +retrieveRecord(patientID: String) : Patient
}

class SuppliesInventory {
  -suppliesList: List<String>
  +updateInventory() : void
  +performWeeklyInspection() : void
}

class ProcedureRoom {
  -roomNumber: int
  -status: String
  +inspect() : void
}

'------------------------
' Relationships between Classes
'------------------------

' Clinic aggregates core components
Clinic --> Office : uses
Clinic --> AppointmentBook : maintains
Clinic --> PatientRecords : stores
Clinic --> "*" Patient : registers

' Patient uses a Form to be registered
Patient --> Form : "fills out"

' AppointmentBook is composed of Appointments
AppointmentBook "1" o-- "*" Appointment

' Office schedules appointments into the AppointmentBook
Office --> AppointmentBook : "updates"

' SuppliesInventory inspects several ProcedureRooms
SuppliesInventory --> "*" ProcedureRoom : "inspects"

@enduml