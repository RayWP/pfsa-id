,sentence,useful
0,"Java Programming Workshop Your job is to begin creating classes to support storing, retrieving, and tracking insurance information for Fireman’s Fund customers",1
1," You will start by tracking persons, then add policies, then contact info and vehicles and eventually be able to generalize the model and increase its flexibility",1
2," We want to get to a point where you can retrieve a person, their policies, vehicles, dwellings, addresses, and contact info",1
3," Person and Policy Start by creating a Person class and attributes and getters and setters, as shown below",1
4, Assume a Person can be created with all this information at creation time,1
5," In a Tester class, create a main()",1
6," In the main(), create three-person objects with differing information",1
7, Print out the persons’ information using the getXXX() methods,1
8, Create a Policy class and test that you can get and set its attributes correctly by creating a policy object,1
9, If you have time: See if you can calculate the age for the age() method using the birth date,1
10, Collections of Policies There is a link between Persons and Policies,1
11, A Person object can hold a collection of multiple policy objects,1
12, Add a java,1
13,util,1
14,List to your Person class to hold instances of Policy objects,1
15, Use an ArrayList object to implement the List interface,1
16, Add an addPolicy(Policy) method to the Person class that will accept a policy object and stores it in the list,1
17, Add a method: getPolicies() that returns a List of the Policy objects for that Person,1
18, Test this works in the main(): Create two policy objects for each Person Add a policy object to the Person by calling addPolicy() Retrieve the policy object and print its details for each customer Policy Details Policies have additional information the company wishes to keep,1
19," Policies have the contact information: Phone Numbers, Addresses, and Emails",1
20, Policies can cover things like Vehicles,1
21," Create classes, attributes, getters, and setters for these new things",1
22," Note that the contact classes have a method: contactPointAsString(), which returns a string representation of the contact information",1
23, Verify you can create objects of these types in your main(),1
24," Since the policy keeps track of these things, create separate list objects in the Policy class to track these items",1
25," Like the Person, you should create addEmail(), addPhone(), addAddress(), addVehicle() methods and getVehicles(), getPhones()… methods to store the objects in the policy and retrieve all objects of that type from the policy",1
26," Test that this works by adding some of the things you created to the policy and then printing: The Person info For Each policy, its info and a list of its contacts and vehicles",1
27," For simplicity, you can code a simple toString() method for Vehicles to print the vehicle",1
28," Generalize the Model You do business with companies and persons, so add a class to track Company information",1
29, Create a common superclass called a party representing those (persons or companies) with policies,1
30," Move the collection of policies up to the Party superclass, along with the addPolicy() and getPolicies() methods",1
31, Note that the party has a name() method that returns a String representation of the name,1
32," You will need to override this in the Person class and return a concatenation of Last, First name",1
33," To test this, create an Array of Party (size 3) in your main()",1
34," Create a new company, two polices and some contact info, and two vehicles for each policy",1
35, Add these to the Company object Do the same with a Person,1
36," Now, add the Person and company objects to the Party Array",1
37," You should now be able to loop through the party array and print the party, its name, its policies, and its details (try reusing some of the code you wrote earlier)",1
38," Emails, Phones, and Addresses can be considered types of ContactPoints",1
39, Create a superclass to hold the common method contactPointAsString(),1
40, Vehicles are just one type of thing that can be listed on a policy,1
41, Dwellings are another type of thing,1
42," Create a superclass PhysicalObject for these two classes, and factor out the common methods and attributes: Redesign your Policy class to hold a list of ContactPoints and a List of Dwellings",1
43, You will need to create these physical things in the main() and call a new addPhysicalObject() method to add the things to the list in the policy object,1
44, You will need to change the methods to add and retrieve contacts to addContactPoint() and getContactPoints(),1
45," You should now be able to print out the policy, its contact points, and its physical things",1
46," When you print the physical things, print the description and names, which are the attributes common to the physical object class",1
47, Your main() should not have to change much to accommodate these changes,1
48, You have now implemented this non-trivial model,1
