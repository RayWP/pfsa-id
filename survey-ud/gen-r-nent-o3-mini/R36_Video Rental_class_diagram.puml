@startuml

'---------- Enumerations ----------
enum EmployeeType {
  MANAGER
  CASHIER
  STOCKER
}

enum PhoneType {
  OFFICE
  HOME
  BEEPER
}

enum Rating {
  G
  PG
  R
}

enum CartridgeStatus {
  AVAILABLE
  RENTED
  BROKEN
}

'---------- Classes ----------
class Store {
  - storeID : int
  - address : String
  - phoneNumber : String
  + addEmployee(e : Employee)
  + removeEmployee(e : Employee)
  + stockCartridge(c : Cartridge)
  + getInventory() : List<Cartridge>
  + addRentalTransaction(rt : RentalTransaction)
}

class Employee {
  - employeeID : int
  - name : String
  - address : String
  - employeeType : EmployeeType
  - phoneNumbers : List<PhoneNumber>
  + addPhoneNumber(p : PhoneNumber)
  + removePhoneNumber(p : PhoneNumber)
  + getContactInfo() : String
}

class PhoneNumber {
  - number : String
  - phoneType : PhoneType
  + formatNumber() : String
}

class Title {
  - titleID : int
  - name : String
  - runTime : int
  - rating : Rating
  + updateTitle(name : String, runTime : int, rating : Rating)
}

class Distributor {
  - distributorID : int
  - name : String
  - phoneNumber : String
  + getDistributorInfo() : String
}

class Cartridge {
  - cartridgeID : int
  - utilizationCount : int
  - status : CartridgeStatus
  + updateStatus(newStatus : CartridgeStatus)
  + isAvailable() : boolean
}

class Customer {
  - customerID : int
  - name : String
  - phoneNumber : String
  - enrolledStore : Store
  + updateCustomerInfo(name : String, phoneNumber : String)
  + getEnrolledStore() : Store
}

class RentalTransaction {
  - rentalID : int
  - rentalDate : Date
  - totalRentalAmount : double
  - rentalStore : Store
  + addRentalDetail(detail : RentalDetail)
  + calculateTotal() : double
}

class RentalDetail {
  - dueDate : Date
  - actualReturnDate : Date
  + isOverdue() : boolean
  + returnCartridge()
}

'---------- Associations & Relationships ----------

' Employee has a composition relationship with PhoneNumber
Employee "1" *-- "0..*" PhoneNumber : has

' Customer enrolled in one Store
Customer --> "1" Store : enrolled at

' Many RentalTransaction are associated with one Store
Store "1" <-- "0..*" RentalTransaction : processes

' RentalTransaction composes RentalDetail (aggregation/composition)
RentalTransaction "1" *-- "1..*" RentalDetail : contains

' A Store stocks many Cartridges (physical copies)
Store "1" o-- "0..*" Cartridge : stocks

' Each Cartridge is an instance of a Title
Cartridge --> "1" Title : represents

' A Title can be available at many Stores via Cartridges
Title <-- "0..*" Cartridge

' (Optional) Distributor may be associated with Title (if needed)
Distributor "1" <-- "0..*" Title : distributes

@enduml