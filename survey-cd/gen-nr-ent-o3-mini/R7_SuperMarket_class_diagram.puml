@startuml

' Classes with their attributes
class Product {
  - type: String
  - expirationDate: Date
  - group: String
  - price: float
  - ingredients: String
}

class Customer

class NormalCustomer
class ExtraCustomer
NormalCustomer --|> Customer
ExtraCustomer --|> Customer

class Supermarket

class Stock

class Store

class Form {
  - number: int
}

class Supplier

class Cashier

class Group {
  - category: String
}

class Shelf

class Basket

class Machine

class Controller

class Transaction {
  - total: float
}

class Invoice

class Order {
  - quantities: int
  - orders: String
}

class Bakery

class Agent

class FormaInvoice

class Goods

' Associations between classes based on the requirements

' Supermarket components
Supermarket --> Cashier : employs
Supermarket --> Stock : maintains
Supermarket --> Store : organizes
Supermarket --> Shelf : displays products on

' Stock records product information
Stock o-- Product : records
Stock --> Form : uses

' Form records product details
Form --> Product : documents

' Supplier supplies products to the stock
Supplier --> Product : supplies

' Customer interactions
Customer --> Basket : uses to store goods
Customer --> Cashier : proceeds to pay

' Cashier operations
Cashier --> Machine : operates
Cashier --> Transaction : processes
Cashier --> Invoice : generates
Cashier --> FormaInvoice : produces (for cheque payments)

' Controller role
Controller --> Shelf : monitors stock on
Controller --> Transaction : verifies

' Grouping / categorization
Product --> Group : categorized in

' Order processing by bakery and agent
Bakery --> Order : prepares
Agent --> Order : manages
Order --> Product : includes items

' Basket contents
Basket --> Goods : contains

@enduml