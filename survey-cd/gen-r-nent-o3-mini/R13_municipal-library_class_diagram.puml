@startuml

' Define the Member class
class Member {
  - firstName: String
  - surname: String
  + getFirstName(): String
  + setFirstName(firstName: String)
  + getSurname(): String
  + setSurname(surname: String)
}

' Define the Library class that aggregates Documents and Members
class Library {
  - documents: Set<Document>
  - patrons: Set<Member>
  + addDocument(doc: Document)
  + removeDocument(doc: Document)
  + getDocuments(): Set<Document>
  + addPatron(p: Member)
  + removePatron(p: Member)
  + getPatrons(): Set<Member>
}

' Abstract Document class
abstract class Document {
  - title: String
  + getTitle(): String
  + setTitle(title: String)
}

' Journal is a kind of Document
class Journal {
}
Document <|-- Journal

' Newspaper is a specialized Journal with a publication date
class Newspaper {
  - dateOfPublication: Date
  + getDateOfPublication(): Date
  + setDateOfPublication(date: Date)
}
Journal <|-- Newspaper

' Volume is an abstract subclass of Document with an author
abstract class Volume {
  - author: String
  + getAuthor(): String
  + setAuthor(author: String)
}
Document <|-- Volume

' Dictionary, Book and Comics are kinds of Volume
class Dictionary {
}
Volume <|-- Dictionary

class Book {
}
Volume <|-- Book

class Comics {
  - recipientName: String
  + getRecipientName(): String
  + setRecipientName(recipient: String)
}
Volume <|-- Comics

' Relationships: Library aggregates Documents and Members (patrons)
Library *-- "0..*" Document
Library *-- "0..*" Member

@enduml