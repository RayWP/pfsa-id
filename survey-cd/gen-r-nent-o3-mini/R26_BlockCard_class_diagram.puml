@startuml

' Define enums for card status, types, and blocking reasons
enum CardStatus {
  AVAILABLE
  BLOCKED
}

enum CardType {
  DEBIT
  CREDIT
  VIRTUAL
  SUPPLEMENTARY
}

enum BlockingReason {
  STOLEN
  MISSING
  OTHERS
}

' Mobile Application classes for Android and iOS
abstract class MobileApplication {
  +createAccount(): void
  +getBackendCommunicationSystem(): BackendCommunicationSystem
}

class AndroidApplication {
  +createAccount(): void
}
AndroidApplication -|> MobileApplication

class iOSApplication {
  +createAccount(): void
}
iOSApplication -|> MobileApplication

' Backend communication system for kiosk and branches
class BackendCommunicationSystem {
  +sendRequest(request: String): void
  +receiveResponse(): String
  +updateCardStatus(card: Card, status: CardStatus): void
}

MobileApplication --> BackendCommunicationSystem : uses

' Menu and Page classes for application UI
class Menu {
  -pages: List<Page>
  +addPage(page: Page): void
}

class Page {
  -title: String
}

' Specific Cards menu which contains the "My Cards" and "Block Card" pages.
class CardsMenu {
  -pages: List<Page>
  +addPage(page: Page): void
}
CardsMenu -|> Menu

class MyCardsPage {
  -title: String = "My Cards"
}
MyCardsPage -|> Page

class BlockCardPage {
  -title: String = "Block Card"
  +blockCard(card: Card, reason: BlockingReason): boolean
}
BlockCardPage -|> Page

' Customer user class having one or more cards
class CustomerUser {
  -cards: List<Card>
  +registerAccount(): void
  +getCards(): List<Card>
}
CustomerUser "1" --> "0..*" Card : owns

' Card class with blocking process and status checking
class Card {
  -cardNumber: String
  -status: CardStatus
  -cardType: CardType
  +block(reason: BlockingReason): boolean
  +checkStatus(): CardStatus
}

' Relationship: BlockCardPage uses Card blocking process
BlockCardPage --> Card : uses

' The Card class interacts with BackendCommunicationSystem to update status
Card --> BackendCommunicationSystem : updates

@enduml